======= Exercises =======

===== Exercise: Stabilizing the Crank-Nicolson method by Rannacher time stepping =====
label{diffu:exer:CN:Rannacher}

It is well known that the Crank-Nicolson method may give rise to
non-physical oscillations in the solution of diffusion equations
if the initial data exhibit jumps (see Section ref{diffu:pde1:analysis:CN}).
Rannacher cite{Rannacher_1984} suggested a stabilizing technique
consisting of using the Backward Euler scheme for the first two
time steps with step length $\half\Delta t$. One can generalize
this idea to taking $2m$ time steps of size $\half\Delta t$ with
the Backward Euler method and then continuing with the
Crank-Nicolson method, which is of second-order in time.
The idea is that the high frequencies of the initial solution are
quickly damped out, and the Backward Euler scheme treats these
high frequencies correctly. Thereafter, the high frequency content of
the solution is gone and the Crank-Nicolson method will do well.

Test this idea for $m=1,2,3$ on a diffusion problem with a
discontinuous initial condition. Measure the convergence rate using
the solution (ref{diffu:analysis:pde1:step:erf:sol}) with the boundary
conditions
(ref{diffu:analysis:pde1:p1:erf:uL})-(ref{diffu:analysis:pde1:p1:erf:uR})
for $t$ values such that the conditions are in the vicinity of $\pm 1$.
For example, $t< 5a 1.6\cdot 10^{-2}$ makes the solution diffusion from
a step to almost a straight line. The
program `diffu_erf_sol.py` shows how to compute the analytical
solution.


===== Project: Energy estimates for diffusion problems =====
label{diffu:exer:energy:estimates}
file=diffu_energy

idx{energy estimates (diffusion)}

This project concerns so-called *energy estimates* for diffusion problems
that can be used for qualitative analytical insight and for
verification of implementations.

!bsubex
We start with a 1D homogeneous diffusion equation with zero Dirichlet
conditions:

!bt
\begin{align}
u_t &= \alpha u_xx, & x\in \Omega =(0,L),\ t\in (0,T],
label{diffu:exer:estimates:p1:pdf} \\
u(0,t) = u(L,t) &= 0, & t\in (0,T],
label{diffu:exer:estimates:p1:bc}\\
u(x,0) &= I(x), & x\in [0,L]
label{diffu:exer:estimates:p1:ic}
\tp
\end{align}
!et
The energy estimate for this problem reads

!bt
\begin{equation}
||u||_{L^2} \leq ||I||_{L^2},
label{diffu:exer:estimates:p1:result}
\end{equation}
!et
where the $||\cdot ||_{L^2}$ norm is defined by

!bt
\begin{equation}
||g||_{L^2} = \sqrt{\int_0^L g^2dx}\tp
label{diffu:exer:estimates:L2}
\end{equation}
!et
The quantify  $||u||_{L^2}$ or $\half ||u||_{L^2}$ is known
as the *energy* of the solution, although it is not the physical
energy of the system. A mathematical tradition has introduced the
notion *energy* in this context.

The estimate (ref{diffu:exer:estimates:p1:result}) says that the
``size of $u$'' never exceeds that of the initial condition,
or more precisely, it says that the area under the $u$ curve decreases
with time.

To show (ref{diffu:exer:estimates:p1:result}), multiply the PDE
by $u$ and integrate from $0$ to $L$. Use that $uu_t$ can be
expressed as the time derivative of $u^2$ and that $u_xxu$ can
integrated by parts to form an integrand $u_x^2$. Show that
the time derivative of $||u||_{L^2}^2$ must be less than or equal
to zero. Integrate this expression and derive
(ref{diffu:exer:estimates:p1:result}).

# http://www.ann.jussieu.fr/~frey/cours/UdC/ma691/ma691_ch6.pdf
!esubex

!bsubex
Now we address a slightly different problem,

!bt
\begin{align}
u_t &= \alpha u_xx + f(x,t), & x\in \Omega =(0,L),\ t\in (0,T],
label{diffu:exer:estimates:p2:pdf} \\
u(0,t) = u(L,t) &= 0, & t\in (0,T],
label{diffu:exer:estimates:p2:bc}\\
u(x,0) &= 0, & x\in [0,L]
label{diffu:exer:estimates:p2:ic}
\tp
\end{align}
!et
The associated energy estimate is

!bt
\begin{equation}
||u||_{L^2} \leq ||f||_{L^2}\tp
label{diffu:exer:estimates:p2:result}
\end{equation}
!et
(This result is more difficult to derive.)

Now consider the compound problem with an initial condition $I(x)$ and
a right-hand side $f(x,t)$:

!bt
\begin{align}
u_t &= \alpha u_xx + f(x,t), & x\in \Omega =(0,L),\ t\in (0,T],
label{diffu:exer:estimates:p3:pdf} \\
u(0,t) = u(L,t) &= 0, & t\in (0,T],
label{diffu:exer:estimates:p3:bc}\\
u(x,0) &= I(x), & x\in [0,L]
label{diffu:exer:estimates:p3:ic}
\tp
\end{align}
!et
Show that if $w_1$ fulfills
(ref{diffu:exer:estimates:p1:pdf})-(ref{diffu:exer:estimates:p1:ic})
and $w_2$ fulfills
(ref{diffu:exer:estimates:p2:pdf})-(ref{diffu:exer:estimates:p2:ic}),
then $u=w_1 + w_2$ is the solution of
(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic}).
Using the triangle inequality for norms,

!bt
\[ ||a + b|| \leq ||a|| + ||b||,\]
!et
show that the energy estimate for
(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic})
becomes

!bt
\begin{equation}
||u||_{L^2} \leq ||I||_{L^2} + ||f||_{L^2}\tp
label{diffu:exer:estimates:p3:result}
\end{equation}
!et
!esubex

!bsubex
One application of (ref{diffu:exer:estimates:p3:result}) is to prove uniqueness
of the solution.
Suppose $u_1$ and $u_2$ both fulfill
(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic}).
Show that $u=u_1 - u_2$ then fulfills
(ref{diffu:exer:estimates:p3:pdf})-(ref{diffu:exer:estimates:p3:ic})
with $f=0$ and $I=0$. Use (ref{diffu:exer:estimates:p3:result})
to deduce that the energy must be zero for all times and therefore
that $u_1=u_2$, which proves that the solution is unique.
!esubex

!bsubex
Generalize (ref{diffu:exer:estimates:p3:result}) to a 2D/3D
diffusion equation $u_t = \nabla\cdot (\alpha \nabla u)$ for $x\in\Omega$.

!bhint
Use integration by parts in multi dimensions:

!bt
\[ \int_\Omega u \nabla\cdot (\alpha\nabla u)\dx =
- \int_\Omega \alpha \nabla u\cdot\nabla u\dx
+ \int_{\partial\Omega} u \alpha\frac{\partial u}{\partial n},\]
!et
where $\frac{\partial u}{\partial n} = \bm{n}\cdot\nabla u$,
$\bm{n}$ being the outward unit normal to the boundary $\partial\Omega$
of the domain $\Omega$.
!ehint
!esubex

!bsubex
Now we also consider the multi-dimensional PDE $u_t =
\nabla\cdot (\alpha \nabla u)$. Integrate both sides over $\Omega$
and use Gauss' divergence theorem, $\int_\Omega \nabla\cdot\bm{q}\dx
= \int_{\partial\Omega}\bm{q}\cdot\bm{n}\ds$ for a vector field
$\bm{q}$. Show that if we have homogeneous Neumann conditions
on the boundary, $\partial u/\partial n=0$, area under the
$u$ surface remains constant in time and

!bt
\begin{equation}
\int_{\Omega} u\dx = \int_{\Omega} I\dx
\tp
label{diffu:exer:estimates:p4:result}
\end{equation}
!et
!esubex

!bsubex
Establish a code in 1D, 2D, or 3D that can solve a diffusion equation with a
source term $f$, initial condition $I$, and zero Dirichlet or
Neumann conditions on the whole boundary.

We can use (ref{diffu:exer:estimates:p3:result})
and (ref{diffu:exer:estimates:p4:result}) as a partial verification
of the code. Choose some functions $f$ and $I$ and
check that (ref{diffu:exer:estimates:p3:result}) is obeyed at any
time when zero Dirichlet conditions are used.
Iterate over the same $I$ functions and check that
(ref{diffu:exer:estimates:p4:result}) is fulfilled
when using zero Neumann conditions.
!esubex

!bsubex
Make a list of some possible bugs in the code, such as indexing errors
in arrays, failure to set the correct boundary conditions,
evaluation of a term at a wrong time level, and similar.
For each of the bugs, see if the verification tests from the previous
subexercise pass or fail. This investigation shows how strong
the energy estimates and the estimate (ref{diffu:exer:estimates:p4:result})
are for pointing out errors in the implementation.
!esubex

===== Exercise: Splitting methods and preconditioning =====
label{diffu:exer:splitting_prec}

idx{Richardson iteration}
idx{preconditioning}

In Section ref{diffu:2D:direct_vs_iter}, we outlined a class of
iterative methods for $Au=b$ based on splitting $A$ into $A=M-N$
and introducing the iteration

!bt
\[ Mu^{k} = Nu^k + b\tp\]
!et
The very simplest splitting is $M=I$, where $I$ is the identity
matrix. Show that this choice corresponds to the iteration

!bt
\begin{equation}
u^k = u^{k-1} + r^{k-1},\quad r^{k-1} = b - Au^{k-1},
label{diffu:exer:splitting_prec:simplest}
\end{equation}
!et
where $r^{k-1}$ is the residual in the linear system in iteration
$k-1$. The formula (ref{diffu:exer:splitting_prec:simplest}) is known
as Richardson's iteration.
Show that if we apply the simple iteration method
(ref{diffu:exer:splitting_prec:simplest}) to the *preconditioned*
system $M^{-1}Au=M^{-1}b$, we arrive at the Jacobi method by choosing
$M=D$ (the diagonal of $A$) as preconditioner and the SOR method by
choosing $M=\omega^{-1}D + L$ ($L$ being the lower triangular part of
$A$).  This equivalence shows that we can apply one iteration of the
Jacobi or SOR method as preconditioner.

!bsol
Inserting $M=I$ and $N=I-A$ in the iterative method leads to

!bt
\[ u^{k} = (I-A)u^{k-1} + b = u^{k-1} + (b  - Au^{k-1}),\]
!et
which is (ref{diffu:exer:splitting_prec:simplest}).
Replacing $A$ by $M^{-1}A$ and $b$ by $M^{-1}b$ in this equation
gives

!bt
\[ u^k = u^{k-1} + M^{-1}r^{k-1},\quad r^{k-1}=b-Au^{k-1},\]
!et
which we after multiplication by $M$ and reordering can write
as

!bt
\[ Mu^k = (M-A)u^{k-1} + b = Nu^{k-1} + b,\]
!et
which is the standard form for the Jacobi and SOR methods. Choosing $M=D$
gives Jacobi and $M=\omega^{-1}D+L$ gives SOR. We have shown that we may
view $M$ as a preconditioner of a simplest possible iteration method.
!esol

===== Exercise: Oscillating surface temperature of the earth =====
label{diffu:exer:earthosc}

Consider a day-and-night or seasonal variation in temperature at
the surface of the earth. How deep down in the ground will the
surface oscillations reach? For simplicity, we model only the
vertical variation along a coordinate $x$, where $x=0$ at the
surface, and $x$ increases as we go down in the ground.
The temperature is governed by the heat equation

!bt
\[ \varrho c_v\frac{\partial T}{\partial t} = \nabla\cdot(k\nabla T),\]
!et
in some spatial domain $x\in [0,L]$, where $L$ is chosen large enough such
that we can assume that $T$ is approximately constant, independent of the surface
oscillations, for $x>L$. The parameters $\varrho$, $c_v$, and $k$ are the
density, the specific heat capacity at constant volume, and the
heat conduction coefficient, respectively.

!bsubex
Derive the mathematical model for computing $T(x,t)$.
Assume the surface oscillations to be sinusoidal around some mean
temperature $T_m$. Let $T=T_m$ initially. At $x=L$, assume $T\approx T_m$.

!bsol
The surface temperature is set as

!bt
\[ T(0,t) = T_m + A\sin(\omega t)\tp\]
!et
With only one ``active'' spatial coordinate we get the initial-boundary
value problem

!bt
\begin{align*}
\varrho c_v \frac{\partial T}{\partial t} &= \frac{\partial}{\partial x}
\left(k(x)\frac{\partial T}{\partial x}\right), & x\in (0,L),\ t\in (0,T],\\
T(x,0)&= T_m, & x\in [0,L],\\
T(0,t)&= T_m + A\sin(\omega t), & t\in (0,T],\\
T(L,t) &= T_m, & t\in (0,T].
\end{align*}
!et
!esol
!esubex

!bsubex
Scale the model in a) assuming $k$ is constant. Use a time scale
$t_c = \omega^{-1}$ and a length scale $x_c = \sqrt{2\dfc/omega}$,
where $\dfc = k/(\varrho c_v)$. The primary unknown can be scaled
as $\frac{T-T_m}{2A}$.

Show that the scaled PDE is

!bt
\[
\frac{\partial u}{\partial \bar t} =
\frac{1}{2}\frac{\partial^2 u}{\partial x^2},\]
!et
with initial condition $u(\bar x,0) = 0$,
left boundary condition
$u(0,\bar t)  = \sin(\bar t)$,
and right boundary condition
$u(\bar L,\bar t)  = 0$. The bar indicates a dimensionless quantity.

Show that $u(\bar x, \bar t)=e^{-\bar x}\sin (\bar x - \bar t)$ is a
solution that fulfills the PDE and the boundary condition at $\bar x
=0$ (this is the solution we will experience as $\bar
t\rightarrow\infty$ and $L\rightarrow\infty$).  Conclude that an
appropriate domain for $x$ is $[0,4]$ if a damping $e^{-4}\approx
0.18$ is appropriate for implementing $\bar u\approx\hbox{const}$;
increasing to $[0,6]$ damps $\bar u$ to 0.0025.

!bsol
Chapter 3.2.4 in the book cite{Langtangen_scaling} describes the
scaling of this problem in detail.
Inserting dimensionless variables $\bar t = \omega t$, $\bar x =
\sqrt{omega/(2\dfc)} x$, and

!bt
\[ u = \frac{T-T_m}{2A},\]
!et
leads to

!bt
\begin{align*}
\frac{\partial u}{\partial \bar t} &=
\frac{1}{2}\frac{\partial^2 u}{\partial x^2},
\quad & \bar x\in (0,\bar L),\ \bar t\in (0,\bar T],
\\
u(\bar x,0) &= 0,
\quad &\bar x\in [0,1],
\\
u(0,\bar t) & = \sin(\bar t),
\quad  &\bar t\in (0,\bar T],
\\
u(\bar L,\bar t) & = 0,
\quad &\bar t\in (0,\bar T].
\end{align*}
!et
The domain lengths $\bar L$ and $\bar T$ follows from straightforward
scaling of $L$ and $T$.

Inserting $u(\bar x, \bar t)=e^{-\bar x}\sin (\bar t - \bar x)$ in the
PDE shows that this is a solution. It also obeys
the boundary condition $\bar u(0,\bar t)=sin(\bar t)$. As
$\bar t\rightarrow\infty$, the initial condition has no longer impact
on the solution and is ``forgotten'' and of no interest.
The boundary condition at $\bar x=\bar L$ is never compatible with the
given solution unless $\bar u$ is damped to zero, which happens
mathematically as $\bar L\rightarrow\infty$. For a numerical solution,
however, we may use a small finite value such as $\bar L=4$.
!esol
!esubex

!bsubex
Compute the scaled temperature and make animations comparing two solutions
with $\bar L=4$ and $\bar L=8$, respectively (keep $\Delta x$ the same).

!bsol
We can use the `viz` function in `diff1D_vc.py` to do the number
crunching. Appropriate calls and visualization go here:

@@@CODE exer-diffu/surface_osc.py

MOVIE: [https://github.com/hplgit/fdm-book/raw/master/doc/pub/book/html/mov-diffu/surface_osc/movie.mp4]

!esol
!esubex



===== Exercise: Oscillating and pulsating flow in tubes =====
label{diffu:exer:bloodflow}
file=axyiymm_flow

We consider flow in a straight tube with radius $R$ and straight walls.
The flow is driven by a pressure gradient $\beta(t)$. The effect of
gravity can be neglected. The mathematical problem reads

!bt
\begin{align}
\varrho\frac{\partial u}{\partial t} &=
\mu\frac{1}{r}\frac{\partial}{\partial r}\left(
r\frac{\partial u}{\partial r}\right) + \beta(t),\quad
& r\in [0,R],\ t\in (0,T],\\
u(r,0) &= I(r),\quad & r\in [0,R],\\
u(R,t) &= 0,\quad & t\in (0,T],\\
\frac{\partial u}{\partial r}(0,t) &= 0,\quad & t\in (0,T].
\end{align}
!et
We consider two models for $\beta(t)$. One plain, sinusoidal oscillation:

!bt
\begin{equation}
\beta = A\sin(\omega t),
\end{equation}
!et
and one with periodic pulses,

!bt
\begin{equation}
\beta = A\sin^{16}(\omega t),
\end{equation}
!et
Note that both models can be written as $\beta = A\sin^m(\omega t)$, with
$m=1$ and $m=16$, respectively.

!bsubex
Scale the mathematical model, using the viscous time scale $\varrho R^2/\mu$.

!bsol
We can introduce

!bt
\[ \bar r = \frac{r}{R}, \quad \bar t = \frac{t}{\varrho R^2/\mu},\quad u = \frac{u}{u_c}\tp\]
!et
Inserted in the PDE, we get

!bt
\[ \frac{\partial\bar u}{\partial\bar t} =
\frac{1}{\bar r}\frac{\partial}{\partial\bar r}\left(
\bar r\frac{\partial\bar u}{\partial\bar r}\right) +
\frac{R^2 A}{u_c \mu}\sin^m (\alpha\bar t)
\]
!et
where $\alpha$ is a dimensionless number

!bt
\[  \alpha = \frac{\omega\varrho R^2}{\mu} = \frac{\varrho R^2/\mu}{1/\omega},
\]
!et
reflecting the ratio of the viscous diffusion time scale and the
time scale of the oscillating pressure gradient.
We may choose $u_c$ such that the coefficient in the pressure gradient
term equals unity:

!bt
\[ u_c = \frac{R^2 A}{\mu}\tp\]
!et
The governing PDE, dropping the bars, then reads

!bt
\[ \frac{\partial u}{\partial t} =
\frac{1}{r}\frac{\partial}{\partial r}\left(
r\frac{\partial u}{\partial r}\right) +
\sin^m (\alpha\bar t),\quad r\in (0,1),\ t\in (0,T]\tp
\]
!et
!esol
!esubex

!bsubex
Implement the scaled model from a), using the unifying $\theta$ scheme
in time and centered differences in space.

!bsol
We need to take into account extensions below: a coefficient in front of
the viscous term, and an extra source term.
!esol
!esubex

!bsubex
Verify the implementation in b) using a manufactured solution that is
quadratic in $r$ and linear in $t$. Make a corresponding test function.

!bhint
You need to include an extra source term
in the equation to allow for such tests. Let the spatial variation be
$1-r^2$ such that the boundary condition is fulfilled.
!ehint
!esubex

!bsubex
Make animations for $m=1,16$ and $\alpha=1,0.1$. Choose $T$ such that
the motion has reached a steady state (non-visible changes from period to
period in $u$).
!esubex

!bsubex
For $\alpha\gg 1$, the scaling in a) is not good, because the
characteristic time for changes (due to the pressure) is much smaller
than the viscous diffusion time scale ($\alpha$ becomes large).
We should in this case base
the short time scale on $1/\omega$. Scale the model again, and
make an animation for $m=1,16$ and $\alpha = 10$.

!bsol
Now the governing PDE becomes

!bt
\[ \frac{\partial u}{\partial t} =
\alpha^{-1}\frac{1}{r}\frac{\partial}{\partial r}\left(
r\frac{\partial u}{\partial r}\right) +
\sin^m t,\quad r\in (0,1),\ t\in (0,T]\tp
\]
!et
In this case,

!bt
\[ u_c = \frac{A}{\varrho\omega}\tp\]
!et
We see that for $\alpha\gg 1$, we can neglect the viscous term, and we
basically have a balance between the acceleration and the driving pressure
gradient:

!bt
\[\frac{\partial u}{\partial t} = \sin^m t\tp\]
!et
[hpl: This may be a great challenge numerically, since we have a plug
independent of r that oscillates back and forth. CN is probably very
unstable. Can make a point out of this. Try $\alpha=1$ and increase
gently.]

!esol

!esubex


#===== Exercise: Radial heat conduction out of offshore pipelines =====

# Easy to make something out of the ideas/5620/apps/offshore... mekit
# paper where one has a multi-walled radial heat conduction equation.
# Can, as in the paper, use one cell per material. Coupling to soil
# outside with many parameters given. The discussion of the Fourier
# number is interesting - I guess time changes here relates to
# BCs on the inner wall because the gas suddenly has a different
# temperature? Could be a good project perhaps; anyway, the theory
# can be written up.
